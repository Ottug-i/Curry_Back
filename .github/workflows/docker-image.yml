name: Spring Docker Image CI/CD

on:
  push:
    branches: ["deploy"]

env:
  MYSQL_URL: ${{ secrets.MYSQL_URL }}
  MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
  MYSQL_PW: ${{ secrets.MYSQL_PW }}
  JWT_SECURITY_KEY: ${{ secrets.JWT_SECURITY_KEY }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  REDIS_PW: ${{ secrets.REDIS_PW }}
  FLASK_URL: ${{ secrets.FLASK_URL }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKER_IMAGE_NAME: springboot
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE}}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: deploy

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0
      with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
    - run: |-
          gcloud auth configure-docker
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Grant Execute Permission for gradlew  
      run: chmod +x springboot/curry/gradlew

    - name: Replace secrets in application.properites
      working-directory: springboot/curry/src/main/resources
      run: |
        sed -i "s|{MYSQL_URL}|${MYSQL_URL}|g" application-prod.properties
        sed -i "s|{MYSQL_USERNAME}|${MYSQL_USERNAME}|g" application-prod.properties
        sed -i "s|{MYSQL_PW}|${MYSQL_PW}|g" application-prod.properties
        sed -i "s|{JWT_SECURITY_KEY}|${JWT_SECURITY_KEY}|g" application-prod.properties
        sed -i "s|{REDIS_URL}|${REDIS_URL}|g" application-prod.properties
        sed -i "s|{REDIS_PW}|${REDIS_PW}|g" application-prod.properties
        sed -i "s|{FLASK_URL}|${FLASK_URL}|g" application-prod.properties

    - name: SpringBoot Build
      working-directory: springboot/curry
      run: ./gradlew clean build --exclude-task test
    
    - name: SpringBoot Docker Image Build
      working-directory: springboot/curry
      run: docker build . --file Dockerfile --tag "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:latest"

    - name: SpringBoot Docker Image Push
      run: |-
          docker push "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:latest"

    - name: SSH into GCP Instance and Run Docker Compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.GCE_INSTANCE }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
            docker pull "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:latest"
            cd /home/smcurry2023
            docker-compose up -d
            docker container prune -f
            docker image prune -f
